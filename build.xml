<?xml version="1.0"?>
<project name="YdleAPIBundle" default="build" basedir=".">
   
    <target name="php">
        <exec executable="which" outputproperty="php_executable">
            <arg value="php" />
        </exec>
    </target>

    <target name="prepare">
        <mkdir dir="build" />
    </target>

    <target name="build" depends="check-git-checkout-clean,prepare,php,phploc,pdepend,phpmd-ci,phpcs-ci,phpcpd,phpdoc,composer,phpunit,phpcb">
        <exec executable="${php_executable}">
            <arg value="build/composer.phar" />
            <arg value="archive" />
            <arg value="--dir=build" />
        </exec>
    </target>
	
	<target name="build-parallel" depends="check-git-checkout-clean,prepare,php,composer,phpunit,tools-parallel"/>
	
	<target name="tools-parallel"
         description="Run tools in parallel">
		  <parallel threadCount="2">
		   <sequential>
			<antcall target="pdepend"/>
			<antcall target="phpmd-ci"/>
		   </sequential>
		   <antcall target="phpcpd"/>
		   <antcall target="phpcs-ci"/>
		   <antcall target="phploc"/>
		   <antcall target="phpdoc"/>
		    <!-- antcall target="apigen"/ -->
		  </parallel>
	</target>

    <target name="composer" depends="php,composer-check,composer-download">
        <exec executable="${php_executable}">
            <arg value="build/composer.phar" />
            <arg value="install" />
        </exec>
    </target>

    <target name="composer-check" depends="prepare">
        <available file="build/composer.phar" property="composer.present"/>
    </target>

    <target name="composer-download" unless="composer.present">
        <exec executable="wget">
            <arg value="-Obuild/composer.phar" />
            <arg value="http://getcomposer.org/composer.phar" />
        </exec>
    </target>
	
	 <target name="phploc" description="Measure project size using PHPLOC">
  <exec executable="phploc">
   <arg value="--log-csv" />
   <arg value="${basedir}/build/logs/phploc.csv" />
   <arg path="${basedir}/Controller" />
  </exec>
 </target>
 
 <target name="pdepend"
         description="Calculate software metrics using PHP_Depend">
  <exec executable="pdepend">
   <arg value="--jdepend-xml=${basedir}/build/logs/jdepend.xml" />
   <arg value="--jdepend-chart=${basedir}/build/pdepend/dependencies.svg" />
   <arg value="--overview-pyramid=${basedir}/build/pdepend/overview-pyramid.svg" />
   <arg path="${basedir}/Controller" />
  </exec>
 </target>
	
	<target name="phpdoc" description="Generate API documentation using phpDox">
    <exec executable="phpdoc">
	   <arg line="--directory ${basedir}" />
       <arg line="--ignore '*/vendor/*,*/Tests/*'" />
       <arg line="--target 'build/docs'" />
       <arg line="--sourcecode" />
    </exec>
  </target>
  
   <target name="apigen"
            description="Generate API documentation">
        <exec executable="apigen">
            <arg line="--source ${basedir}" />
            <arg line="--exclude */vendor/*" />
            <arg line="--exclude */Tests/*" />
            <arg line="--destination 'build/api'" />
        </exec>
    </target>

  <target name="phpunit" description="Run unit tests with PHPUnit">
    <exec executable="phpunit" failonerror="false">
      <arg value="-c" />
      <arg path="${basedir}/phpunit.xml" />
      <arg line="--coverage-clover ${basedir}/build/logs/clover.xml" />
      <arg line="--coverage-html ${basedir}/build/html" />
    </exec>
  </target>
  
  <target name="phpcb"
         description="Aggregate tool output with PHP_CodeBrowser">
  <exec executable="phpcb">
   <arg value="--log" />
   <arg path="${basedir}/build/logs" />
   <arg value="--source" />
   <arg path="${basedir}/Controller" />
   <arg value="--output" />
   <arg path="${basedir}/build/code-browser" />
  </exec>
 </target>
 
 <target name="phpcpd" description="Find duplicate code using PHPCPD">
  <exec executable="phpcpd">
   <arg value="--log-pmd" />
   <arg value="${basedir}/build/logs/pmd-cpd.xml" />
   <arg path="${basedir}/Controller" />
  </exec>
 </target>
 
 <target name="phpcs-ci"
         description="Find coding standard violations using PHP_CodeSniffer creating a log file for the continuous integration server">
  <exec executable="phpcs" output="/dev/null">
   <arg value="--report=checkstyle" />
   <arg value="--report-file=${basedir}/build/logs/checkstyle.xml" />
   <arg value="--standard=${basedir}/phpcs.xml" />
   <arg path="${basedir}/Controller" />
  </exec>
 </target>
 
  <target name="phpcs"
         description="Find coding standard violations using PHP_CodeSniffer and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpcs">
   <arg value="--standard=${basedir}/phpcs.xml" />
   <arg path="${basedir}/Controller" />
  </exec>
 </target>
 
  <target name="phpmd"
         description="Perform project mess detection using PHPMD and print human readable output. Intended for usage on the command line before committing.">
  <exec executable="phpmd">
   <arg path="${basedir}/Controller" />
   <arg value="text" />
   <arg value="${basedir}/phpmd.xml" />
  </exec>
 </target>

 <target name="phpmd-ci"
         description="Perform project mess detection using PHPMD creating a log file for the continuous integration server">
  <exec executable="phpmd">
   <arg path="${basedir}/Controller" />
   <arg value="xml" />
   <arg value="${basedir}/phpmd.xml" />
   <arg value="--reportfile" />
   <arg value="${basedir}/build/logs/pmd.xml" />
  </exec>
 </target>



    <target name="check-git-checkout-clean">
        <exec executable="git" failonerror="true">
            <arg value="diff-index" />
            <arg value="--quiet" />
            <arg value="HEAD" />
        </exec>
    </target>

    <macrodef name="git-commit">
        <attribute name="file" default="NOT SET"/>
        <attribute name="message" default="NOT SET"/>

        <sequential>
            <exec executable="git">
                <arg value="add" />
                <arg value="@{file}" />
            </exec>
            <exec executable="git">
                <arg value="commit" />
                <arg value="-m" />
                <arg value="@{message}" />
            </exec>
        </sequential>
    </macrodef>

    <macrodef name="git-tag">
        <attribute name="version" default="NOT SET" />

        <sequential>
            <exec executable="git">
                <arg value="tag" />
                <arg value="-m" />
                <arg value="v@{version}" />
                <arg value="v@{version}" />
            </exec>
        </sequential>
    </macrodef>
</project>